"use strict";

//Задачи на собесах

// Какое будет выведено значение: let x = 5; alert( x++ ); ?
// Чему равно такое выражение: [ ] + false - null + true ?
// Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
// Чему равна сумма [ ] + 1 + 2?
// Что выведет этот код: alert( "1"[0] )?
// Чему равно 2 && 1 && null && 0 && undefined ?
// Есть ли разница между выражениями? !!( a && b ) и (a && b)?
// Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
// a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
// Что выведет этот код: alert( +"Infinity" ); ?
// Верно ли сравнение: "Ёжик" > "яблоко"?
// Чему равно 0 || "" || 2 || undefined || true || falsе ?

let x = 5; alert( x++ ); //Только префиксная форма дает результат сразу, постфиксная возвращает начальное значение
[ ] + false - null + true //NaN //пустой массив приравнивает к строке
let y = 1; let x = y = 2; alert(x); //12
[ ] + 1 + 2 //NaN
alert( "1"[0] ) // 1 - нулевой элемент массива
2 && 1 && null && 0 && undefined //null - оператор и запинается на лжи, первая ложь - null
!!( a && b ) и (a && b) //нет, двойное отрицание превращает выражение в булевое
a = [1, 2, 3]; b = [1, 2, 3]; // нет, массивы разные
alert( +"Infinity" ); //Числовое Infinity
"Ёжик" > "яблоко" //Нет, сравнение по алфавиту
0 || "" || 2 || undefined || true || falsе //2